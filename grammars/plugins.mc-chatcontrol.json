{
  "scopeName": "source.mc-chatcontrol",
  "name": "ChatControl Rule Plugins",
  "fileTypes": [
    "packets.txt"
  ],
  "firstLineMatch": "^#.*([ChatControl|Rule|File]).*([ChatControl|Rule|File]).*([ChatControl|Rule|File]).*",
  "patterns": [
    {
      "match": "^#.*$",
      "name": "comment.line.number-sign"
    },
    {
      "match": "^(match).(.*)",
      "captures": {
        "1": {
          "name": "entity.name.section"
        },
        "2": {
          "name": "string.regexp"
        }
      }
    },
    {
      "contentName": "string.unquoted",
      "begin": "^(then).(replace|rewrite)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control"
        },
        "2": {
          "name": "entity.name.function"
        }
      },
      "end": "(\\r\\n|\\r|\\n)",
      "patterns": [
        {
          "match": "%world",
          "name": "variable.language"
        },
        {
          "match": "\\|",
          "name": "invalid.illegal"
        },
        {
          "match": "&[0-9a-fklmnor]",
          "name": "markup.italic"
        },
        {
          "match": "&[^0-9a-fklmnor]",
          "name": "invalid.illegal"
        }
      ]
    },
    {
      "contentName": "string.unquoted",
      "begin": "^(then).(rewritein).(\\b[a-zA-Z0-9\\-\\.]+\\b)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control"
        },
        "2": {
          "name": "entity.name.function"
        },
        "3": {
          "name": "variable.language"
        }
      },
      "end": "(\\r\\n|\\r|\\n)",
      "patterns": [
        {
          "match": "%world",
          "name": "variable.language"
        },
        {
          "match": "\\|",
          "name": "invalid.illegal"
        },
        {
          "match": "&[0-9a-fklmnor]",
          "name": "markup.italic"
        },
        {
          "match": "&[^0-9a-fklmnor]",
          "name": "invalid.illegal"
        }
      ]
    },
    {
      "match": "^dont verbose",
      "name": "keyword.control"
    },
    {
      "match": "^(then).(deny)\\s(.*)",
      "captures": {
        "1": {
          "name": "keyword.control"
        },
        "2": {
          "name": "entity.name.function"
        },
        "3": {
          "name": "invalid.illegal"
        }
      }
    }
  ]
}
